name: Build and release 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ 'master', 'develop', 'feature/**' ]  

jobs:
  gradleValidation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    timeout-minutes: 3
    steps:
      - name: Fetch Sources
        uses: actions/checkout@v2.3.4

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.4

  test:
    name: Test
    needs: gradleValidation
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Setup Java
        run: sudo apt-get install openjdk-11-jdk

      - name: Fetch Sources
        uses: actions/checkout@v2.3.4

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2.1.6
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run Linters and Test
        run: chmod +x ./gradlew && ./gradlew check

      - name: Verify Plugin
        run: chmod +x ./gradlew && ./gradlew verifyPlugin

  # Prepare a draft release for GitHub Releases page for the manual verification
  # If accepted and published, release workflow would be triggered
  releaseDraft:
    name: Release Draft
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v2.3.4
        
      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}

      - name: Create Release Draft
        id: createDraft
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.version }}
          release_name: v${{ needs.build.outputs.version }}
          body: ${{ needs.build.outputs.changelog }}
          draft: true

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: plugin-artifact

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createDraft.outputs.upload_url }}
          asset_path: ./${{ needs.build.outputs.artifact }}
          asset_name: ${{ needs.build.outputs.artifact }}
          asset_content_type: application/zip
